version: "3"
services:
  postgres:
    image: "postgres:9.6"
    container_name: "postgres"
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  #comment initdb after you will have use it at first run
#  initdb:
#    build: .
#    entrypoint: airflow initdb
#    depends_on:
#      - postgres
  webserver:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./plugins:/usr/local/airflow/plugins
    ports:
      - "8080:8080"
    entrypoint: airflow webserver -p 8080
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  scheduler:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./my_dir:/usr/local/airflow/my_dir
      - ./plugins:/usr/local/airflow/plugins
    entrypoint: airflow scheduler
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-scheduler.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  redis:
    image: redis:5.0.5
  worker_1:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./my_dir:/usr/local/airflow/my_dir
      - ./plugins:/usr/local/airflow/plugins
    entrypoint: airflow worker -cn worker_1
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-worker.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  worker_2:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./my_dir:/usr/local/airflow/my_dir
      - ./plugins:/usr/local/airflow/plugins
    entrypoint: airflow worker -cn worker_2
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-worker.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  flower:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/usr/local/airflow/dags
    entrypoint: airflow flower
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-flower.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5555:5555"